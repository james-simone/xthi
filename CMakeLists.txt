cmake_minimum_required(VERSION 3.17)
project(xthi LANGUAGES C CXX)
set(CMAKE_C_STANDARD 99)
set(CMAKE_CXX_STANDARD 11)

set(GPU "NONE" CACHE STRING "GPU brand NONE | NVIDIA | AMD")
set_property(CACHE GPU PROPERTY STRINGS NONE NVIDIA AMD)
message(STATUS "GPU='${GPU}'")

# Let's be really pernickety
add_compile_options(-Wall)
if (CMAKE_C_COMPILER_ID MATCHES "Clang|GNU")
    add_compile_options(-Wextra -Wpedantic)
endif()

find_package(OpenMP REQUIRED COMPONENTS C)
find_package(MPI REQUIRED COMPONENTS C)

if("${GPU}" STREQUAL "NVIDIA")
   find_package(CUDAToolkit REQUIRED)
endif()
if("${GPU}" STREQUAL "AMD")
   set(ROCM_PATH /opt/rocm CACHE PATH "Path to ROCm installation")
   list (APPEND CMAKE_PREFIX_PATH ${ROCM_PATH}/lib/cmake ${ROCM_PATH}/hip/cmake )
   find_package(HIP REQUIRED)
endif()

add_executable(xthi xthi.c)
target_link_libraries(xthi PUBLIC MPI::MPI_C OpenMP::OpenMP_C $<$<PLATFORM_ID:Linux>:numa>)
if("${GPU}" STREQUAL "NVIDIA")
   target_compile_definitions(xthi PUBLIC CUDA=1)
   target_link_libraries(xthi PUBLIC CUDA::cudart)
endif()
if("${GPU}" STREQUAL "AMD")
   target_compile_definitions(xthi PUBLIC HIP=1)
   target_link_libraries(xthi PUBLIC hip::host)
endif()

add_executable(xthi.nompi xthi.c)
target_compile_definitions(xthi.nompi PUBLIC NO_MPI=1)
target_link_libraries(xthi.nompi PUBLIC OpenMP::OpenMP_C $<$<PLATFORM_ID:Linux>:numa>)
if("${GPU}" STREQUAL "NVIDIA")
   target_compile_definitions(xthi.nompi PUBLIC CUDA=1)
   target_link_libraries(xthi.nompi PUBLIC CUDA::cudart)
endif()
if("${GPU}" STREQUAL "AMD")
   target_compile_definitions(xthi.nompi PUBLIC HIP=1)
   target_link_libraries(xthi.nompi PUBLIC hip::host)
endif()
